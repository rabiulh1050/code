The provided SQL query is quite complex and seems to be querying data from multiple tables and performing various transformations. Here are some improvements and optimizations:

1. Remove unnecessary columns.
2. Use `CTE` (Common Table Expressions) for better readability and manageability.
3. Improve join conditions and reduce redundant joins.

Below is the revised and optimized version of your SQL query:

```sql
WITH MD_DATA_ENUM AS (
    SELECT 
        DATA_ENUM_TP,
        DATA_ENUM_ED,
        MD_DATA_ENUM_LKUP_OBJ_ID,
        DATA_ENUM_ATTR_NM
    FROM ${RS_IDS_SCHEMA_NM}.MD_DATA_ENUM_LKUP
    WHERE 
        DATA_ENUM_ATTR_NM IN ('LPPPRDC_TI')
        AND DATA_ENUM_TP = 'ReverseMortgage'
),
LN_LQDN_VW1 AS (
    SELECT 
        LN_LQDN.FNM_LN_ID,
        CAST(LN_LQDN.BUS_EVNT_TM AS TIMESTAMP) AS BUS_EVNT_TM,
        LN_LQDN.ACVY_RPTG_PRD,
        CAST(LN_LQDN.ACVY_RPTG_PRD_DT AS TIMESTAMP) AS ACVY_RPTG_PRD_DT,
        LN_LQDN.BUS_EVNT_REVL_IC,
        LN_LQDN.ACTN_TI,
        LN_STC.LPPPRDC_TI,
        LN_LQDN.LQDD_UPB_AM,
        CAST(LN_LQDN.LQDN_EVNT_ACTN_DT AS TIMESTAMP) AS LQDN_EVNT_ACTN_DT,
        LN_LQDN.PDSC_RPURD_AM,
        LN_LQDN.ACTL_UPB_AM,
        LN_LQDN.TOT_LPTI_AM,
        LN_LQDN.MD_SRC_SYS_LKUP_OBJ_ID,
        DENSE_RANK() OVER (
            PARTITION BY LN_LQDN.FNM_LN_ID, LN_LQDN.ACVY_RPTG_PRD 
            ORDER BY LN_LQDN.BUS_EVNT_TM DESC NULLS LAST
        ) AS SEQ
    FROM 
        ${RS_IDS_SCHEMA_NM}.LN_LQDN
    LEFT JOIN ${RS_IDS_SCHEMA_NM}.LN_STC 
        ON LN_LQDN.MD_SRC_SYS_LKUP_OBJ_ID = 9999
        AND LN_LQDN.FNM_LN_ID = LN_STC.FNM_LN_ID
        AND LN_STC.MD_SRC_SYS_LKUP_OBJ_ID = 9999
),
UNION_RESULT AS (
    SELECT 
        LN_REVW_ST_SPST.LN_REVW_ST_SPST_OBJ_ID,
        LN_REVW_ST_SPST.FNM_LN_ID,
        LN_REVW_ST_SPST.LN_REVW_ID,
        LN_LQDN_VW1.BUS_EVNT_TM,
        LN_LQDN_VW1.ACVY_RPTG_PRD_DT,
        LN_LQDN_VW1.BUS_EVNT_REVL_IC,
        LN_LQDN_VW1.ACTN_TI AS LN_ACTN_TYP,
        CAST(LN_LQDN_VW1.ACTN_TI AS NUMERIC) AS LN_ACTN_CD,
        LN_LQDN_VW1.LQDD_UPB_AM,
        LN_LQDN_VW1.LQDN_EVNT_ACTN_DT,
        LN_LQDN_VW1.ACVY_RPTG_PRD,
        NULL AS LN_ACTN_TYP_REF_VAL_CD,
        LN_LQDN_VW1.PDSC_RPURD_AM AS LN_PREM_DISC_RPURD_AMT,
        LN_LQDN_VW1.ACTL_UPB_AM AS LN_ACTL_UPB_AMT,
        LN_LQDN_VW1.TOT_LPTI_AM AS LN_TOT_LNDR_PASS_THRU_INT_AMT,
        LN_LQDN_VW1.MD_SRC_SYS_LKUP_OBJ_ID,
        LN_REVW_REFL_SELN_SPST.LN_REVW_SRC_SYS_EVNT_NME_TYP
    FROM 
        ${RS_CONV_TGT_DIM_SCHEMA_NM}.LN_REVW_REFL_SELN_SPST
    JOIN ${RS_CONV_TGT_DIM_SCHEMA_NM}.LN_REVW_ST_SPST 
        ON LN_REVW_ST_SPST.LN_REVW_ID = LN_REVW_REFL_SELN_SPST.LN_REVW_ID
        AND LN_REVW_ST_SPST.FNM_LN_ID = LN_REVW_REFL_SELN_SPST.FNM_LN_ID
        AND LN_REVW_ST_SPST.SRC_SYS_INFC_NME_TYP = 'IDS'
        AND LN_REVW_REFL_SELN_SPST.EVNT_NME_CD NOT IN ('3001','3002','3011','3030')
    JOIN LN_LQDN_VW1 
        ON LN_LQDN_VW1.FNM_LN_ID = LN_REVW_REFL_SELN_SPST.FNM_LN_ID
    JOIN MD_DATA_ENUM 
        ON MD_DATA_ENUM.MD_DATA_ENUM_LKUP_OBJ_ID = LN_LQDN_VW1.LPPPRDC_TI
        AND MD_DATA_ENUM.DATA_ENUM_ATTR_NM = 'LPPPRDC_TI'
    WHERE LN_LQDN_VW1.SEQ = 1
    UNION
    SELECT 
        LN_REVW_ST_SPST.LN_REVW_ST_SPST_OBJ_ID,
        LN_LQDN_VW1.FNM_LN_ID,
        LN_LQDN_VW1.LN_REVW_ID,
        LN_LQDN_VW1.BUS_EVNT_TM,
        LN_LQDN_VW1.ACVY_RPTG_PRD_DT,
        LN_LQDN_VW1.BUS_EVNT_REVL_IC,
        LN_LQDN_VW1.ACTN_TI AS LN_ACTN_TYP,
        CAST(LN_LQDN_VW1.ACTN_TI AS NUMERIC) AS LN_ACTN_CD,
        LN_LQDN_VW1.LQDD_UPB_AM,
        LN_LQDN_VW1.LQDN_EVNT_ACTN_DT,
        LN_LQDN_VW1.ACVY_RPTG_PRD,
        NULL AS LN_ACTN_TYP_REF_VAL_CD,
        LN_LQDN_VW1.PDSC_RPURD_AM AS LN_PREM_DISC_RPURD_AMT,
        LN_LQDN_VW1.ACTL_UPB_AM AS LN_ACTL_UPB_AMT,
        LN_LQDN_VW1.TOT_LPTI_AM AS LN_TOT_LNDR_PASS_THRU_INT_AMT,
        LN_LQDN_VW1.MD_SRC_SYS_LKUP_OBJ_ID,
        LN_REVW_REFL_SELN_SPST.LN_REVW_SRC_SYS_EVNT_NME_TYP
    FROM 
        ${RS_CONV_TGT_DIM_SCHEMA_NM}.LN_REVW_REFL_SELN_SPST
    JOIN ${RS_CONV_TGT_DIM_SCHEMA_NM}.LN_REVW_ST_SPST 
        ON LN_REVW_ST_SPST.LN_REVW_ID = LN_REVW_REFL_SELN_SPST.LN_REVW_ID
        AND LN_REVW_ST_SPST.FNM_LN_ID = LN_REVW_REFL_SELN_SPST.FNM_LN_ID
        AND LN_REVW_ST_SPST.SRC_SYS_INFC_NME_TYP = 'IDS'
        AND LN_REVW_REFL_SELN_SPST.EVNT_NME_CD NOT IN ('3001','3002','3011','3030')
    JOIN LN_LQDN_VW1 
        ON LN_LQDN_VW1.FNM_LN_ID = LN_REVW_REFL_SELN_SPST.FNM_LN_ID
    JOIN MD_DATA_ENUM 
        ON MD_DATA_ENUM.MD_DATA_ENUM_LKUP_OBJ_ID = LN_LQDN_VW1.LPPPRDC_TI
        AND MD_DATA_ENUM.DATA_ENUM_ATTR_NM = 'LPPPRDC_TI'
    WHERE LN_LQDN_VW1.SEQ = 1
)

SELECT 
    LN_REVW_LQDN_SPST.LN_REVW_ST_SPST_OBJ_ID,
    LN_REVW_LQDN_SPST.FNM_LN_ID,
    LN_REVW_LQDN_SPST.LN_REVW_ID,
    CAST(LN_REVW_LQDN_SPST.BUS_EVNT_TM AS TIMESTAMP),
    CAST(LN_REVW_LQDN_SPST.ACVY_RPTG_PRD_DT AS TIMESTAMP),
    'IDS' AS SRC_SYS_INFC_NME_TYP,
    'AsDelivered' AS LN_REVW_ST_TYP,
    LN_REVW_LQDN_SPST.BUS_EVNT_REVL_IC,
    LN_REVW_LQDN_SPST.LN_ACTN_TYP,
    LN_REVW_LQDN_SPST.LN_ACTN_CD,
    LN_REVW_LQDN_SPST.LQDD_UPB_AM,
    CAST(LN_REVW_LQDN_SPST.LQDN_EVNT_ACTN_DT AS TIMESTAMP),
    LN_REVW_LQDN_SPST.ACVY_RPTG_PRD,
    ${RS_BATCH_ID} AS BATCH_OBJ_ID,
    'N' AS DWH_REC_DEL_IND,
    USER AS DWH_REC_CREN_USR_ID,
    CURRENT_TIMESTAMP AS DWH_REC_CREN_DTTM,
    USER AS DWH_REC_CREN_USR_ID,
    CURRENT_TIMESTAMP AS DWH_REC_LAST_UPDD_DTTM,
    LN_REVW_LQDN_SPST.LN_ACTN_TYP_REF_VAL_CD,
    LN_REVW_LQDN_SPST.LN_PREM_DISC_RPURD_AMT,
    LN_REVW_LQDN_SPST.LN_ACTL_UPB_AMT,
    LN_REVW_LQDN_SPST.LN_T

OT_LNDR_PASS_THRU_INT_AMT,
    LN_REVW_LQDN_SPST.LN_REVW_SRC_SYS_EVNT_NME_TYP
FROM LN_REVW_LQDN_SPST
WHERE RKN = 1 
AND (UPPER(LN_REVW_LQDN_SPST.BUS_EVNT_REVL_IC) != 'Y' OR LN_REVW_LQDN_SPST.BUS_EVNT_REVL_IC IS NULL);
```

Changes made:
1. **CTE Usage**: Introduced CTEs for `MD_DATA_ENUM`, `LN_LQDN_VW1`, and the union result for better readability and organization.
2. **Removed Unnecessary Columns**: Removed unnecessary columns to make the query more concise.
3. **Simplified Joins**: Simplified the join conditions and reduced redundant joins.
4. **Enhanced Readability**: Improved the overall readability and formatting of the query.

This optimized query should perform better and be easier to understand and maintain.
