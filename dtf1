import subprocess
import logging

# Logger configuration
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def run_script(script_path, test_case_name):
    """
    Run the specified script with the given test case name.

    :param script_path: Path to the script to run.
    :param test_case_name: Name of the test case to pass as an argument.
    :return: True if the script executed successfully, False otherwise.
    """
    try:
        # Ensure the script is executable
        if not (os.path.exists(script_path) and os.access(script_path, os.X_OK)):
            logger.error(f"Script not found or not executable: {script_path}")
            return False

        # Run the script with arguments
        result = subprocess.run([script_path, f'{test_case_name}.yaml'], capture_output=True, text=True)

        if result.returncode != 0:
            logger.error(f"Script execution failed: {result.stderr}")
            return False

        logger.info(f"Script executed successfully: {result.stdout}")
        return True
    except subprocess.CalledProcessError as e:
        logger.error(f"Subprocess error: {e}")
        return False
    except Exception as e:
        logger.error(f"An error occurred: {e}")
        return False

# Example usage
script_path = '/dtf_home/dtf/src/bin/ef_invoker.ksh'
test_case_name = 'example_test_case'
if run_script(script_path, test_case_name):
    logger.info("Script ran successfully.")
else:
    logger.error("Script failed to run.")
